export default(async(t=null)=>{let e=[];if(["invisible","resize","visible"].forEach(t=>{if(coreData.events?.[t]){let i=$(`[data-${t}]:not([data-event="false"]):not([data-run="true"]) ?`);i.length&&i.forEach(i=>{if(!i.hasAttribute("data-run")){if("resize"===t)new ResizeObserver(e=>{if(coreData.events[t]&&checkOff(i,t)){let a=evDone(i.getAttribute(`data-call-${t}`),i.getAttribute(`data-calls-${t}`));a.doneCan&&e.forEach(e=>{i.setAttribute(`data-calls-${t}`,a.doneNew),e.it=i,e.calls=a.doneNew,e.type=t,e.itType=t,evRate(i.getAttribute(`data-debounce-${t}`),i.getAttribute(`data-throttle-${t}`))?rateBuild.fn(e,t):build(e,t)})}}).observe(i);else{let a="visible"===t?i.getAttribute("data-config-visible"):i.getAttribute("data-config-invisible");if(a&&(a=toBuild(a)),!a||!isObj(a)){let n={root:null,rootMargin:"0px",threshold:0};a="visible"===t?isObj(coreData.events?.visible)?coreData.events.visible:n:isObj(coreData.events?.invisible)?coreData.events.invisible:n}new IntersectionObserver((e,a)=>{if(coreData.events[t]&&checkOff(i,t)){let n=evDone(i.getAttribute(`data-call-${t}`),i.getAttribute(`data-calls-${t}`));n.doneCan&&e.forEach(e=>{("visible"===t&&e.isIntersecting||"invisible"===t&&!e.isIntersecting)&&(i.setAttribute(`data-calls-${t}`,n.doneNew),e.it=i,e.calls=n.doneNew,e.type=t,e.itType=t,evRate(i.getAttribute(`data-debounce-${t}`),i.getAttribute(`data-throttle-${t}`))?rateBuild.fn(e,t):build(e,t))})}},a).observe(i)}e.push(i)}}),(i=$(`[data-${t}-in]:not([data-event="false"]):not([data-run="true"]) ?`)).length&&i.forEach(i=>{if(!i.hasAttribute("data-run")){let a=i.$(":: ?");a.length&&a.forEach(e=>{if("resize"===t)new ResizeObserver(a=>{if(coreData.events[t]&&checkOff(i,`${t}-in`)){let n=evDone(i.getAttribute(`data-call-${t}-in`),i.getAttribute(`data-calls-${t}-in`));n.doneCan&&a.forEach(a=>{i.setAttribute(`data-calls-${t}-in`,n.doneNew),a.it=e,a.calls=n.doneNew,a.type=t,a.itType=`${t}-in`,evRate(i.getAttribute(`data-debounce-${t}-in`),i.getAttribute(`data-throttle-${t}-in`))?rateBuild.fn(a,`${t}-in`):build(a,`${t}-in`)})}}).observe(e);else{let a="visible"===t?e.getAttribute("data-config-visible"):e.getAttribute("data-config-invisible");if(a&&(a=toBuild(a)),!a||!isObj(a)){let n={root:null,rootMargin:"0px",threshold:0};a="visible"===t?isObj(coreData.events?.visible)?coreData.events.visible:n:isObj(coreData.events?.invisible)?coreData.events.invisible:n}new IntersectionObserver((a,n)=>{if(coreData.events[t]&&checkOff(i,`${t}-in`)){let l=evDone(i.getAttribute(`data-call-${t}-in`),i.getAttribute(`data-calls-${t}-in`));l.doneCan&&a.forEach(a=>{("visible"===t&&a.isIntersecting||"invisible"===t&&!a.isIntersecting)&&(i.setAttribute(`data-calls-${t}-in`,l.doneNew),a.it=e,a.calls=l.doneNew,a.type=t,a.itType=`${t}-in`,evRate(i.getAttribute(`data-debounce-${t}-in`),i.getAttribute(`data-throttle-${t}-in`))?rateBuild.fn(a,`${t}-in`):build(a,`${t}-in`))})}},a).observe(e)}}),e.push(i)}})}}),coreData.events?.init){let i=$('[data-init]:not([data-event="false"]) ?');i.length&&i.forEach(i=>{if(checkOff(i,"init")){let a=evDone(i.getAttribute("data-call-init"),i.getAttribute("data-calls-init"));if(a.doneCan){i.setAttribute("data-calls-init",a.doneNew);let n=!i.hasAttribute("data-run");n&&e.push(i);let l={it:i,calls:a.doneNew,raw:n,type:t};evRate(i.getAttribute("data-debounce-init"),i.getAttribute("data-throttle-init"))?rateBuild.fn(l,"init"):build(l,"init")}}})}e.length&&e.forEach(t=>t.dataset.run=!0);let a=$('[data-tpl][data-set]:not([data-event="false"]) ?');if(a.length&&a.forEach(t=>{let e=t.dataset.tpl,i=toBuild(t.dataset.set||null);t.removeAttribute("data-set"),e&&tpl.replace(e,...isObj(i)?[i]:hasArr(i)?i:[{}])}),["ready","load"].includes(t)&&(coreData.init?.type!=="load"&&"ready"===t||coreData.init?.type==="load"&&"load"===t)&&(coreData.init?.preloader?isArr(coreData.init.preloader)?coreData.init.preloader.forEach(t=>$(t)?.attr.set("aria-busy","false")):$(coreData.init.preloader)?.attr.set("aria-busy","false"):$it.preloader?.attr.set("aria-busy","false"),isObj(coreData.init?.module)))for(let n in coreData.init.module)coreData.init.module.hasOwnProperty(n)&&(coreData.init.module[n]=isArr(coreData.init.module[n])?coreData.init.module[n]:[coreData.init.module[n]],w(n,await module[n](...coreData.init.module[n])));coreData.events?.init&&evt.run("init",t)});