/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import type UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
type MainElement = any;
import type { ClassMapValue } from "@ui5/webcomponents-base/dist/types.js";
	
function block0 (this: MainElement, context: UI5Element, tags: string[], suffix: string | undefined) { return html`<div class="container"><div class="jumbotron"><div class="row"><div class="col-md-6"><h1>UI5 Web Components non-keyed</h1></div><div class="col-md-6"><div class="row"><div class="col-sm-6 smallpad"><button type="button" class="btn btn-primary btn-block" id="run" @click=${this.run}>Create 1,000 rows</button></div><div class="col-sm-6 smallpad"><button type="button" class="btn btn-primary btn-block" id="runlots" @click=${this.runLots}>Create 10,000 rows</button></div><div class="col-sm-6 smallpad"><button type="button" class="btn btn-primary btn-block" id="add" @click=${this.add}>Append 1,000 rows</button></div><div class="col-sm-6 smallpad"><button type="button" class="btn btn-primary btn-block" id="update" @click=${this.update}>Update every 10th row</button></div><div class="col-sm-6 smallpad"><button type="button" class="btn btn-primary btn-block" id="clear" @click=${this.clear}>Clear</button></div><div class="col-sm-6 smallpad"><button type="button" class="btn btn-primary btn-block" id="swaprows" @click=${this.swapRows}>Swap Rows</button></div></div></div></div></div><table class="table table-hover table-striped test-data" @click=${this.handleClick}><tbody>${ repeat(this._rows, (item, index) => (item as typeof item & {_id?: any})._id || index, (item, index: number) => block1.call(this, context, tags, suffix, item, index)) }</tbody></table><span class="preloadicon glyphicon glyphicon-remove" aria-hidden="true"></span></div><link href="/css/currentStyle.css" rel="stylesheet"/>`;}
function block1 (this: MainElement, context: UI5Element, tags: string[], suffix: string | undefined, item: any, index: number) { return html`<tr id=${ifDefined(item.id)} class=${ifDefined(item._class)}><td class="col-md-1">${ifDefined(item.id)}</td><td class="col-md-4"><a data-action="select" data-id=${ifDefined(item.id)}>${ifDefined(item.label)}</a></td><td class="col-md-1"><a><span class="glyphicon glyphicon-remove" aria-hidden="true" data-action="remove" data-id=${ifDefined(item.id)}></span></a></td><td class="col-md-6"></td></tr>`;}


export default block0;